server:
  port: 8083

spring:
  application:
    name: hhplus
  profiles:
    active: local
  jackson:
    serialization:
      write-dates-as-timestamps: false
      write-date-timestamps-as-nanoseconds: false
    deserialization:
      read-date-timestamps-as-nanoseconds: false
    date-format: "yyyy-MM-dd HH:mm:ss"
    time-zone: "UTC"
  datasource:
    name: HangHaePlusDataSource
    type: com.zaxxer.hikari.HikariDataSource
    hikari:
      maximum-pool-size: 20          # 3 → 20 (100 VU 대응)
      minimum-idle: 10               # 최소 유지 커넥션
      connection-timeout: 3000       # 10s → 3s (빠른 실패)
      idle-timeout: 300000           # 5분 유휴 타임아웃
      max-lifetime: 1800000          # 30분 최대 생명주기
      leak-detection-threshold: 10000 # 10초 후 누수 탐지
    driver-class-name: com.mysql.cj.jdbc.Driver
  jpa:
    open-in-view: false
    generate-ddl: false
    show-sql: false              # SQL 로깅 비활성화 (성능 향상)
    hibernate:
      ddl-auto: none
    properties:
      hibernate.timezone.default_storage: NORMALIZE_UTC
      hibernate.jdbc.time_zone: UTC
      hibernate.hbm2ddl.auto: none
  data:
    redis:
      host: localhost
      port: 6379
  kafka:
    bootstrap-servers: localhost:9092
    producer:
      key-serializer: org.apache.kafka.common.serialization.StringSerializer
      value-serializer: org.springframework.kafka.support.serializer.JsonSerializer
      properties:
        spring.json.add.type.headers: false
    consumer:
      group-id: ecommerce-group
      key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      value-deserializer: org.springframework.kafka.support.serializer.JsonDeserializer
      properties:
        spring.json.trusted.packages: "kr.hhplus.be.server"
        spring.json.add.type.headers: false
      auto-offset-reset: earliest
      enable-auto-commit: false  # 비동기 수동 커밋을 위해 자동 커밋 비활성화

---
spring.config.activate.on-profile: local, test

spring:
  datasource:
    url: jdbc:mysql://localhost:3306/ecommerce?characterEncoding=UTF-8&serverTimezone=UTC
    username: application
    password: application

springdoc:
  use-fqn: true

# Event Publisher 설정
event:
  publisher:
    type: kafka  # spring 또는 kafka

# Kafka 설정은 위의 spring 섹션에 통합

# 토픽 설정
kafka:
  topics:
    order-completed: order-completed-topic
    product-ranking: product-ranking-topic
    data-platform-transfer: data-platform-transfer-topic
    coupon-issue: coupon-issue-events